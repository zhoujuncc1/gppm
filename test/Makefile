# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
CXX=g++

USER_DIR = ..

GTEST_DIR = $(USER_DIR)/test/gtest

TARGET_DIR = $(USER_DIR)/bin/test

GTEST_OBJ_DIR = $(TARGET_DIR)/gtest

# Where to find user code.

USER_OBJ_DIR = $(USER_DIR)/bin
USER_HEADERS = $(USER_DIR)/include
BOOST_HEADERS=/usr/local/include
# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include -I$(USER_HEADERS) -I$(BOOST_HEADERS)

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread -std=c++11

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = bltl_test model_test

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(TESTS)

clean :
	rm -f $(TESTS) gtest.a gtest_main.a *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c -o $(GTEST_OBJ_DIR)/$@ \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c -o $(GTEST_OBJ_DIR)/$@\
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : $(GTEST_OBJ_DIR)/gtest-all.o
	$(AR) $(ARFLAGS) $(GTEST_OBJ_DIR)/$@ $^

gtest_main.a : $(GTEST_OBJ_DIR)/gtest-all.o $(GTEST_OBJ_DIR)/gtest_main.o
	$(AR) $(ARFLAGS) $(GTEST_OBJ_DIR)/$@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.
bltl_test.o: $(USER_DIR)/test/gppm/bltl_test.cpp
	$(CC) -c -o $(TARGET_DIR)/gppm/$@ $^
	
bltl_test : $(USER_OBJ_DIR)/Bltl/prd_parser.o $(USER_OBJ_DIR)/Bltl/Prd.o $(TARGET_DIR)/gppm/bltl_test.o $(USER_OBJ_DIR)/Bltl/Parameter.o $(GTEST_OBJ_DIR)/gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $(TARGET_DIR)/gppm/$@

model_test.o: $(USER_DIR)/test/gppm/model_test.cpp $(USER_HEADERS)/Model.h
	$(CC) -c -o $(TARGET_DIR)/gppm/$@ $^
	
model_test: model_test.o $(MODEL).o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $(TARGET_DIR)/gppm/$@
	
%.o: 
	